Leetcode 1854
Ques: You are given a 2D integer array logs where each logs[i] = [birthi, deathi] indicates the birth and death years of the ith person.

The population of some year x is the number of people alive during that year. The ith person is counted in year x's population if x is in the inclusive range [birthi, deathi - 1]. Note that the person is not counted in the year that they die.

Return the earliest year with the maximum population.

Example 1:

Input: logs = [[1993,1999],[2000,2010]]
Output: 1993
Explanation: The maximum population is 1, and 1993 is the earliest year with this population.
Example 2:

Input: logs = [[1950,1961],[1960,1971],[1970,1981]]
Output: 1960
Explanation: 
The maximum population is 2, and it had happened in years 1960 and 1970.
The earlier year between them is 1960.

Soln: 

class Solution {
    
    TreeMap<Integer, Integer> map = new TreeMap<>();

    public int maximumPopulation(int[][] logs) {
        
        int sum=0;
        int max = 0;
        int year = 0;
        for(int i=0;i<logs.length;i++){
            int start = logs[i][0];
            int end = logs[i][1];
            
            map.put(start,map.getOrDefault(start,0)+1); // map[start]++
            map.put(end,map.getOrDefault(end,0)-1);//map[end]-- coz we need value till (end-1) so we did end =-1
        }
        
        for(int key:map.keySet()){
                sum+=map.get(key);
                if(sum>max){
                    max=sum;
                    year=key;
                }
        }
        
        return year;
    }
}
