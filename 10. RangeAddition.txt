Leetcode 370 Range Addition
Ques: You are given an integer length and an array updates where updates[i] = [startIdxi, endIdxi, inci].

You have an array arr of length length with all zeros, and you have some operation to apply on arr. In the ith operation, you should increment all the elements arr[startIdxi], arr[startIdxi + 1], ..., arr[endIdxi] by inci.

Return arr after applying all the updates.

Example 1:
Input: length = 5, updates = [[1,3,2],[2,4,3],[0,2,-2]]
Output: [-2,0,3,5,3]

Example 2:
Input: length = 10, updates = [[2,4,6],[5,6,8],[1,9,-4]]
Output: [0,-4,2,2,2,4,4,-4,-4,-4]

Soln: 
The optimal time complexity is O(k + n) and uses O(1) extra space.

Lets take this example
			       s e v
Input: length = 5, updates = [[1,3,2],[2,4,3],[0,2,-2]]
Output: [-2,0,3,5,3]
s-> start
e-> end
v-> value

map[s]=+value
map[e+1]= -value

class Solution {
    public int[] getModifiedArray(int length, int[][] updates) {
        int[] map = new int[length];

	for(int i=0;i<updates.length;i++){
		int start = updates[i][0];
		int end = updates[i][1];
		int value = updates[i][2];

		map[start] += value; // add the value to the existing value in the array
		if(end+1<length){ // < length coz arrange mein till length-1 tak hota hai
			map[end+1]+= value*(-1);
		}
	}
	//After this accumulate sum in a variable and keep assigning to every index.
	int sum=0;
	for(int i=0;i<length;i++){
		sum+=map[i];
		map[i] = sum;
	}
	
	return map;
    }
}


TC: O(n)
SC: O(n) or O(1) coz we have to create an array to return the answer. 
